<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:util="http://www.springframework.org/schema/util"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">
                
    <!-- ================================================================================================ -->
    <!-- Handler mappings. -->                
    
    <bean name="core.comp.handlerMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <value>
                @{core.comp.handler.mapping.url.prefix}/js/**/*=core.comp.getJavaScriptBundle
                @{core.comp.handler.mapping.url.prefix}/jsmember/**/*=core.comp.getJavaScriptBundleMember
            </value>
        </property>
        <property name="interceptors">
            <list>
                <bean class="au.com.sensis.mobile.web.component.logging.spring.EntryAndExitLoggingWebRequestInterceptor">
                    <property name="ndcMessage" value="@{core.comp.name}"/>
                </bean>
            </list>
        </property>
    </bean>
    
    <!-- ================================================================================================ -->                
    <!-- Controllers. -->
    
    <bean id="core.comp.abstractResourceBundleLoaderController" 
        class="au.com.sensis.mobile.web.component.core.bundle.AbstractResourceBundleLoaderController"
        abstract="true"
        init-method="validateState">
        <property name="resourceBundleLoader" ref="core.comp.resourceBundleLoader"/>
        <property name="featureEnablementRegistry" ref="core.comp.featureEnablementRegistry"/>
        
        <property name="resourceNameRequestUriPrefix" value="@{core.env.context.root.component.prefix}"/>
        
        <!--
          - Allow clients to use a cached response for about 1 year so that they don't always have to 
          - re-validate the cached copy. Note that you should not set to a value greater
          - than a year. See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21 
          -
          - NOTE: This depends on a feature of the shared build scripts (added in wl-build-scripts 1.0.10)
          - which generates JavaScript bundles that include the build version in their bundle names.
          - This ensures that new deployments will serve up JS files from a new, unique URL (and thus
          - caching older versions indefinitely will be safe).
          - Also note that we rely on each component's mscr file to include a project version token
          - in JavaScript file names. eg:
          - 
          - <relative>map/js/map-component-iphone-@project.version.complete@.js</relative>  
          -->
        <property name="cacheSeconds" value="31536000"/>
    </bean>
    
    <bean id="core.comp.abstractGetJavaScriptBundle" 
        class="au.com.sensis.mobile.web.component.core.bundle.ResourceBundleLoaderController"
        parent="core.comp.abstractResourceBundleLoaderController"
        init-method="validateState"
        abstract="true">
            
        <!-- Child beans are expected to set the contextRootComponentPrefix property. -->
        <!-- <property name="contextRootComponentPrefix" value="@{core.env.context.root.component.prefix}@{core.comp.name}"/>-->
    </bean>    
    
    <bean id="core.comp.getJavaScriptBundle" 
        parent="core.comp.abstractGetJavaScriptBundle"
        init-method="validateState">
        <property name="contextRootComponentPrefix" value="@{core.env.context.root.component.prefix}@{core.comp.name}/"/>
    </bean>
    
    <bean id="core.comp.getJavaScriptBundleMember" 
        class="au.com.sensis.mobile.web.component.core.bundle.ExplodedBundleMemberResourceLoaderController"
        parent="core.comp.abstractResourceBundleLoaderController"
        init-method="validateState">
        
        <!-- 
          - Clients should not cache bundle members since the names of these files do not include
          - the component version number.
          -->
        <property name="cacheSeconds" value="-1"/>
    </bean>
    
</beans>
