==== Version 1.0.18 (tag: core_v1_0_18) ====

Fixed:
- CUI-133 Auto Complete - refactor JavaScript EMS interface out of map component
    - Created new ems sub-component and created tag files and MCS policies for it. Moved EMS
      related MCS policies from the map component into here.
    
Other changes:    
- Entry and exit logging in tag files now occurs at debug level instead of info level.

==== Version 1.0.17 (tag: core_v1_0_17) ====

Fixes "CUI-79: Component Showcase Deployed with expanded jar - Hotswapped JavaScript files are ignored by Tomcat".

ServletContextResourceBundleLoader enhanced to support an injected path prefix. 

coreComponentResourceBundleLoadersContext.xml now configures core.comp.resourceBundleLoader
to be a ChainedResourceBundleLoader by default that contains a chain of
ClasspathResourceBundleLoader followed by a ServletContextResourceBundleLoader . Allows JavaScript
to be looked up under the classpath first, then if this fails, looked up in an JAR expanded location (WEB-INF/). 
This allows for hot deploy of JavaScript, unlike the ClasspathResourceBundleLoader which is susceptible to class 
loader caching (eg. in Tomcat).

==== Version 1.0.16 (tag: core_v1_0_16) ====

Added XmlHttpRequestDetector. New coreComponentUtilContext.xml defines a XmlHttpRequestDetector bean
exposed as "core.comp.xmlHttpRequestDetector".  

Application upgrade instructions: If your application is Spring based, simply inject the above
bean into all beans that need it and invoke its isXmlHttpRequest method as needed. 
The context file should be picked up automatically if you have followed the standard steps for making 
a webapp ready for components 
(see http://wiki.sensis.com.au/display/WIRE/UI+Components+-+Using+In+A+WebApp#UIComponents-UsingInAWebApp-Makeyourwebappreadyforcomponents).
 
If your application is not Spring based, you should typically instantiate an instance where needed
and call its isXmlHttpRequest method where needed. 

==== Version 1.0.15 (tag: core_v1_0_15) ====

Fixed ivy.xml so that struts2-core is only a dependency of the showcase configuration.

==== Version 1.0.14 (tag: core_v1_0_14) ====

AbstractDeviceConfigRegistry is now a bit more robust. Throws a DeviceConfigRegistryException
if the device config contains a duplicate device id. AbstractDeviceConfigRegistry also now
exclusively throws DeviceConfigRegistryExceptions instead of the generic RuntimeException.

==== Version 1.0.13 (tag: core_v1_0_13) ====

AbstractDeviceConfigRegistry now implements the DeviceConfigRegistry 
interface to facilitate mocking by unit tests. AbstractDeviceConfigRegistry
follows a pattern of marking all non-private methods as final unless
they are intended to be overridden, so mocking an instance of the abstract
class using the EasyMock class extension will not work.. 

==== Version 1.0.12 (tag: core_v1_0_12) ====

Added au.com.sensis.mobile.web.component.core.device.xsd and now
depends on wl-build-scripts 1.0.7 for device-config-xjc target.

Added JAXB classes and xjb files generated by the device-config-xjc target.

Added new AbstractDeviceConfigRegistry base class. Now depends on sdpCommon-utils 
1.0-005 so that we can use the new XMLBinder.

==== Version 1.0.11 (tag: core_v1_0_11) ====

Volantis policies configured so that JavaScript will be served up to all devices.
This is in preparation for someone to test targeted devices against components, the findings
of which will serve to refine the Volantis policies.

==== Version 1.0.10 (tag: core_v1_0_10) ====

Added Android-OS to MCS mscr policies.

==== Version 1.0.9 (tag: core_v1_0_9) ====

ReportingUtilities JavaScript class: "to" method now always
sets the "xrw=xhr" request parameter. Some phones like the Nokia 
6120 do not allow request headers to be set
so mootools fails to set the 'X-Requested-With header' to 'XMLHttpRequest' (and
the browser itself doesn't set this). So we always set an additional request
parameter corresponding to the header. This allows server side code to detect AJAX requests.  

==== Version 1.0.8 (tag: core_v1_0_8) ====

Added new util subcomponent to serve up Yoanes' utils.js. Widened the list 
of devices that the core and logging MSCR files apply to (still not the 
"real" list - just for current adhoc testing).

==== Version 1.0.7 (tag: core_v1_0_7) ====

Added custom autoIncId JSP tag, implemented by the AutoIncIdTag class.

==== Version 1.0.6 (tag: core_v1_0_6) ====

Deliverable from iteration 1.0.6 (and 1.0.5 since I skipped that tag) 
of the rockit Common UI project (http://jira.sensis.com.au/browse/CUI). 
These iterations focused mainly on stabilising the framework.

==== Version 1.0.4 (tag: core_v1_0_4) ====

Deliverable from iteration 1.0.4 of the rockit Common UI project 
(http://jira.sensis.com.au/browse/CUI). This iteration focused mainly 
on adding logging support to the current framework, adding a template
component and fixing up various other, smaller issues.

==== Version 1.0.3 (tag: core_v1_0_3) ====

Deliverable from iteration 1.0.3 of the rockit Common UI project 
(http://jira.sensis.com.au/browse/CUI). This iteration focused mainly 
on testing the current framework by prototyping the networknav and
map components and (locally) integrating them into WPM.

==== Version 1.0.1-001 (tag: not tagged yet) ====

Next bleeding edge version on the way to 1.0.2 for the rockit 
Common UI project. Changes summary:
* ScriptTag is now abstracted away from Volantis.  

==== Version 1.0.1 (tag: core_v1_0_1) ====

Deliverable from iteration 1.0.1 of the rockit Common UI project 
(http://jira.sensis.com.au/browse/CUI). This iteration focused mainly 
on the project structure, testbed structure and build scripts. 
All build targets should work.
 
 